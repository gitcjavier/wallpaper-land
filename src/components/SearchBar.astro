---
interface Props {
  searchQuery?: string;
}

const { searchQuery = '' } = Astro.props;
---

<div class="search-bar mb-8">
  <div class="relative max-w-md mx-auto">
    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
      <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
      </svg>
    </div>
    <input 
      type="text" 
      class="block w-full pl-10 pr-4 py-3 border border-gray-300 rounded-xl leading-5 bg-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all duration-200"
      placeholder="Buscar wallpapers..."
      value={searchQuery}
      id="search-input"
    />
  </div>
</div>

<script>
  const searchInput = document.getElementById('search-input') as HTMLInputElement;
  let searchTimeout: NodeJS.Timeout;
  
  searchInput?.addEventListener('input', (e) => {
    clearTimeout(searchTimeout);
    
    searchTimeout = setTimeout(() => {
      const query = (e.target as HTMLInputElement).value.trim();
      const url = new URL(window.location.href);
      
      if (query) {
        url.searchParams.set('search', query);
      } else {
        url.searchParams.delete('search');
      }
      
      window.location.href = url.toString();
    }, 500);
  });
</script>